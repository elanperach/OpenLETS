.large-10.columns
  h1.bold= t("activerecord.models.#{resource_class.name.downcase}", count: 1)
.large-2.columns
  = link_to new_resource_path, class: 'button expand radius new-button'
    i.fa.fa-plus
    = " "
    = t("forms.create_button", name: t("activerecord.models.#{resource_class.name.downcase}", count: 1))
.large-12.columns
  table.responsive
    thead
      tr
        - attributes.each do |name|
          th= sortable(name, t("tables.#{name.to_s}"))
        - if current_user.has_role?(:admin) && params[:controller] =='admin/users'
          th= t('tables.roles')
        th= t('tables.actions')
    tbody
      - collection.each do |resource|
        tr
          - attributes.each do |name|
            - attribute = resource.send(name)
            td
              - if name == :image 
                = image_tag(attribute, size: '50x50') 
              - elsif name == :name && resource_class.name == 'Setting'
                = t("admin.settings.#{attribute}")
              - elsif name == :created_at
                = attribute.strftime("%d/%m/%Y")
              - elsif [:user_id, :buyer_id, :seller_id].include?(name)
                = link_to User.find(attribute).name, admin_user_path(attribute)
              - elsif attribute.present? && name == :wish_id
                = link_to admin_wish_path(attribute)
                  = Wish.find(attribute).title
              - elsif attribute.present? && name == :item_id
                = link_to admin_item_path(attribute)
                  = Item.find(attribute).title rescue nil
              - elsif name == :workflow_state && params[:controller] =='admin/users'
                span.label.radius
                  = current_member.workflow_state
              - else
                = attribute
          - if current_user.has_role?(:admin) && params[:controller] =='admin/users'
            td.roles
              - resource.roles.each do |role|
                span.label.radius
                  = role.name

          td.actions
            ul.button-group.radius.tiny
              li= link_to resource_path(resource), class: 'button small success', title: t('forms.show')
                i.fa.fa-info
              li= link_to edit_resource_path(resource), class: 'button small', title: t('forms.edit')
                i.fa.fa-edit
              li= link_to resource_path(resource), method: :delete, confirm: t('forms.delete_confirm'), class: 'button small alert', title: t('forms.delete')
                i.fa.fa-trash-o

  = will_paginate collection, next_label: '»', previous_label: '«', renderer: FoundationPagination::Rails