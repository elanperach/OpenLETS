table.responsive
  thead
    tr
      - attributes.each do |name|
        th= sortable(name, t("tables.#{name.to_s}"))
      - if current_user.has_role?(:admin)
        th= t('tables.roles')
      th= t('tables.workflow_actions')
      th= t('tables.actions')
  tbody
    - collection.each do |resource|
      tr
        - attributes.each do |name|
          - attribute = resource.send(name)
          td
            - if name == :image 
              = image_tag(attribute, size: '50x50') 
            - elsif name == :name && resource_class.name == 'Setting'
              = t("admin.settings.#{attribute}")
            - elsif name == :created_at
              = attribute.strftime("%d/%m/%Y")
            - elsif [:user_id, :buyer_id, :seller_id].include?(name)
              = link_to User.find(attribute).name, admin_user_path(attribute)
            - elsif attribute.present? && name == :wish_id
              = link_to admin_wish_path(attribute)
                = Wish.find(attribute).title
            - elsif attribute.present? && name == :item_id
              = link_to admin_item_path(attribute)
                = Item.find(attribute).title rescue nil
            - elsif name == :workflow_state
              span.label.radius
                = current_member.workflow_state
            - else
              = attribute
        - if current_user.has_role?(:admin)
          td.roles
            - resource.roles.each do |role|
              span.label.radius
                = role.name
        td.workflow_actions.actions
          ul.button-group.radius.tiny
            - unless current_member.approved?
              li= link_to approve_admin_user_path(resource), method: :put, class: 'button small', title: t('workflow_state.approve')
                i.fa.fa-check
                |  
                = t('workflow_state.approve')
            - unless current_member.banned?                  
              li= link_to ban_admin_user_path(resource), method: :put, class: 'button small alert', title: t('workflow_state.ban')
                i.fa.fa-exclamation-circle
                |  
                = t('workflow_state.ban')
        td.actions
          ul.button-group.radius.tiny
            li= link_to resource_path(resource), class: 'button small success', title: t('forms.show')
              i.fa.fa-info
            li= link_to edit_resource_path(resource), class: 'button small', title: t('forms.edit')
              i.fa.fa-edit
            li= link_to resource_path(resource), method: :delete, confirm: t('forms.delete_confirm'), class: 'button small alert', title: t('forms.delete')
              i.fa.fa-trash-o

= will_paginate collection, next_label: '»', previous_label: '«', renderer: FoundationPagination::Rails